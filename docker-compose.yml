services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: nestjs_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-mydb}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - nestjs_network
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-mydb}',
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  # NestJS приложение
  app:
    build: .
    container_name: nestjs_app
    ports:
      - '5555:5555'
    environment:
      - NODE_ENV=development
      - PORT=5555
      - DATABASE_URL=postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-mydb}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - nestjs_network
    restart: unless-stopped
    command: sh -c "npx prisma migrate deploy && npm run start:dev"

volumes:
  postgres_data:

networks:
  nestjs_network:
    driver: bridge
